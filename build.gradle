plugins {
    id 'java'
    id 'distribution'
    id 'checkstyle'
    id "net.ltgt.errorprone" version "2.0.1"
    id 'com.adarshr.test-logger' version '2.0.0'
}

version = '22.0'

repositories {
    mavenCentral()
    maven { url "https://repo.hortonworks.com/content/repositories/releases" }
    maven { url "https://repo.hortonworks.com/content/groups/public" }
    maven { url "https://plugins.gradle.org/m2/" }
}

compileJava.options.encoding = 'UTF-8'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

checkstyle {
    configFile = file("$project.rootDir/config/checkstyle/checkstyle.xml")
    toolVersion = "8.29"
    showViolations = true
    ignoreFailures = false
    maxWarnings = 0
}

task createDirs() {
  file('build/package').mkdirs()
}

task buildWeb(type:Exec) {
    workingDir './web'
    commandLine './deploy.sh'
    standardOutput = new ByteArrayOutputStream()
    ext.output = {
        return standardOutput.toString()
    }
}

task copyWeb(type: Copy) {
  from('web/dist')
  into('build/package/web')
}

task copyDeps(type: Copy) {
  from(configurations.compile)
  into('build/package/lib')
}

task copyLibs(type: Copy, dependsOn: 'jar') {
  from('build/libs')
  into('build/package/lib')
}

task copyPackage(type: Copy) {
  from('src/package')
  into('build/package')
}

task copyConfig(type: Copy) {
  from('src/main/resources/config')
  into('build/package/config')
}

task copyData(type: Copy) {
    from('data')
    into('build/package/data')
}

task copyResult(type: Copy) {
    from('result')
    into('build/package/result')
}

task copy(dependsOn: [
      'createDirs',
      'buildWeb',
      'copyWeb',
      'copyDeps',
      'copyLibs',
      'copyPackage',
      'copyConfig',
      'copyData',
      'copyResult']) {
  }

distributions {
  main {
    baseName = 'yanagishima'
    contents {
      from { 'build/package' }
    }
  }
}

tasks.withType(JavaCompile).configureEach {
    options.errorprone {
        error('MissingOverride', 'ClassCanBeStatic', 'ArrayToString', 'RemoveUnusedImports', "PreferJavaTimeOverload")
        disable('JavaTimeDefaultTimeZone', 'UnusedVariable', 'UnusedMethod', 'FutureReturnValueIgnored', 'StringSplitter')
    }
}

distZip.dependsOn 'copy'


dependencies {
    // Spring Boot
    compile 'org.springframework.boot:spring-boot-starter-web:2.3.5.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-jetty:2.3.5.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa:2.3.5.RELEASE'
    compile 'org.springframework.boot:spring-boot-autoconfigure:2.3.5.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-actuator:2.3.5.RELEASE'
    compile 'io.springfox:springfox-boot-starter:3.0.0'

    // MySQL
    compile 'mysql:mysql-connector-java:5.1.47'

    // Logger
    compile 'org.slf4j:slf4j-api:1.7.10'
    compile 'org.slf4j:slf4j-log4j12:1.7.10'

    // Presto
    compile 'io.prestosql:presto-client:347'
    compile 'io.prestosql:presto-parser:347'
    compile 'com.squareup.okhttp3:okhttp:3.14.9'

    // Spark
    compile 'org.apache.httpcomponents:fluent-hc:4.5.13'
    compile 'org.jsoup:jsoup:1.11.3'

    // Hive
    compile 'org.apache.hive:hive-jdbc:1.2.1000.2.5.3.0-37'
    compile 'org.apache.hadoop:hadoop-common:2.7.3.2.5.3.0-37'

    // Elasticsearch
    compile 'com.github.wyukawa.elasticsearch.unofficial.jdbc.driver:elasticsearch-jdbc-driver:0.0.9'

    // Fluentd
    compile 'org.komamitsu:fluency:1.7.0'

    // Utility
    compile 'org.apache.commons:commons-csv:1.5'
    compile 'com.google.guava:guava:30.1-jre'
    compile 'com.github.wyukawa.elasticsearch.unofficial.jdbc.driver:elasticsearch-jdbc-driver:0.0.9'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    testCompileOnly 'org.projectlombok:lombok:1.18.8'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.8'

    // Errorprone
    errorprone 'com.google.errorprone:error_prone_core:2.3.4'

    // Tests
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.7.0"
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.3.5.RELEASE'
    testImplementation 'com.h2database:h2:1.4.200'
    testImplementation 'org.mockito:mockito-core:3.9.0'
    testImplementation 'org.mockito:mockito-inline:3.9.0'
    testImplementation 'org.assertj:assertj-core:3.18.1'
}

test {
    useJUnitPlatform()
}

configurations {
  all {
    exclude group: 'ch.qos.logback', module: 'logback-classic'
    exclude group: 'com.google.code.gson', module: 'gson'
    exclude group: 'org.eclipse.jetty.aggregate', module: 'jetty-all'
    exclude group: 'javax.servlet', module: 'servlet-api'
  }
}
