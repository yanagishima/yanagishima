plugins {
    id 'java'
    id 'distribution'
    id 'checkstyle'
    id 'com.adarshr.test-logger' version '3.2.0'
}

version = '23.0'

repositories {
    mavenCentral()
    maven { url "https://repo.hortonworks.com/content/repositories/releases" }
    maven { url "https://repo.hortonworks.com/content/groups/public" }
    maven { url "https://plugins.gradle.org/m2/" }
}

compileJava.options.encoding = 'UTF-8'
sourceCompatibility = 11
targetCompatibility = 11

checkstyle {
    configFile = file("$project.rootDir/config/checkstyle/checkstyle.xml")
    toolVersion = "8.29"
    showViolations = true
    ignoreFailures = true
    maxWarnings = 0
}

tasks.register('createDirs') {
    file('build/package').mkdirs()
}

tasks.register('buildWeb', Exec) {
    workingDir './web'
    commandLine './deploy.sh'
    standardOutput = new ByteArrayOutputStream()
    ext.output = {
        return standardOutput.toString()
    }
}

tasks.register('copyWeb', Copy) {
    from('web/dist')
    into('build/package/web')
}

tasks.register('copyDeps', Copy) {
    from(configurations.compileClasspath, configurations.runtimeClasspath)
    into('build/package/lib')
}

tasks.register('copyLibs', Copy) {
    dependsOn 'jar'
    from('build/libs')
    into('build/package/lib')
}

tasks.register('copyPackage', Copy) {
    from('src/package')
    into('build/package')
}

tasks.register('copyConfig', Copy) {
    from('src/main/resources/config')
    into('build/package/config')
}

tasks.register('copyData', Copy) {
    from('data')
    into('build/package/data')
}

tasks.register('copyResult', Copy) {
    from('result')
    into('build/package/result')
}

tasks.register('copy') {
    dependsOn(
            'createDirs',
            'buildWeb',
            'copyWeb',
            'copyDeps',
            'copyLibs',
            'copyPackage',
            'copyConfig',
            'copyData',
            'copyResult')
}

distributions {
  main {
    distributionBaseName = 'yanagishima'
    contents {
      from { 'build/package' }
    }
  }
}

distZip.dependsOn 'copy'


dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.14'
    implementation 'org.springframework.boot:spring-boot-starter-jetty:2.7.14'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.14'
    implementation 'org.springframework.boot:spring-boot-autoconfigure:2.7.14'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.14'
    implementation 'org.springframework.boot:spring-boot-starter-logging:2.7.14'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    // MySQL
    implementation 'mysql:mysql-connector-java:8.0.33'

    // PostgreSQL
    implementation 'org.postgresql:postgresql:42.2.27'

    // SQLite
    implementation 'org.xerial:sqlite-jdbc:3.42.0.0'
    implementation 'com.github.gwenn:sqlite-dialect:0.1.4'

    // Presto
    implementation 'com.facebook.presto:presto-client:0.282'
    implementation 'com.facebook.presto:presto-parser:0.282'
    implementation 'com.squareup.okhttp3:okhttp:3.14.9'

    // Trino
    implementation 'io.trino:trino-client:419'
    implementation 'io.trino:trino-parser:419'

    // Spark
    implementation 'org.apache.httpcomponents:fluent-hc:4.5.14'
    implementation 'org.jsoup:jsoup:1.16.1'

    // Hive
    implementation 'org.apache.hive:hive-jdbc:1.2.1000.2.5.3.0-37'
    implementation 'org.apache.hadoop:hadoop-common:2.7.3.2.5.3.0-37'

    // Fluentd
    implementation 'org.komamitsu:fluency:1.8.1'

    // Utility
    implementation 'org.apache.commons:commons-csv:1.10.0'
    implementation 'com.google.guava:guava:32.1.2-jre'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'

    // Tests
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.10.0"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.10.0"
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.14'
    testImplementation 'com.h2database:h2:2.2.220'
    testImplementation 'org.mockito:mockito-core:3.9.0'
    testImplementation 'org.mockito:mockito-inline:3.9.0'
    testImplementation 'org.assertj:assertj-core:3.24.2'
}

test {
    useJUnitPlatform()
}

configurations {
  configureEach {
    exclude group: 'ch.qos.logback', module: 'logback-classic'
    exclude group: 'com.google.code.gson', module: 'gson'
    exclude group: 'org.eclipse.jetty.aggregate', module: 'jetty-all'
    exclude group: 'javax.servlet', module: 'servlet-api'
  }
}
